service: komiks-api

frameworkVersion: ">=1.0.0 <2.0.0"

custom:
  stage: ${opt:stage, 'local'}

provider:
  name: aws
  runtime: java8
  environment: ${file(env.yml):${self:custom.stage}}
  region: ${file(env.yml):${self:custom.stage}.REGION}
  versionFunctions: false

package:
  individually: true

functions:
  login:
    handler: com.komiks.api.interfaces.LoginHandler
    package:
      artifact: authentication/build/distributions/authentication.zip
    events:
      - http:
          path: /auth/login
          method: POST
  auth:
    handler: com.komiks.api.ApiGatewayAuthorizerHandler
    package:
      artifact: authorizer/build/distributions/authorizer.zip
  inventory:
    handler: com.komiks.api.LambdaEntryPoint::handleRequest
    package:
      artifact: inventory/build/distributions/inventory.zip
    events:
      - http:
          path: /inventory/{proxy+}
          method: any
          authorizer: auth
  users:
    handler: com.komiks.api.LambdaEntryPoint::handleRequest
    package:
      artifact: users/build/distributions/users.zip
    events:
      - http:
          path: /users
          method: GET
          authorizer: auth
      - http:
          path: /users/{proxy+}
          method: any
          authorizer: auth
  listProducts:
    handler: com.komiks.api.ListProductsHandler
    package:
      artifact: products/build/distributions/products.zip
    events:
      - http:
          path: /products
          method: GET
          authorizer: auth
  getProduct:
    handler: com.komiks.api.GetProductHandler
    package:
      artifact: products/build/distributions/products.zip
    events:
      - http:
          path: /products/{id}
          method: GET
          authorizer: auth